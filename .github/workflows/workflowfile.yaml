# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven
#Name for the work flow
name: GitHubaction Demo With Azure
#trugger build on push and pull events
on:
 push:
    branches: [main, feature/branch]
 pull_request:
     branches: [main, feature/branch]
#  Allows you to run this workflow manually from the Actions tab
 workflow_dispatch:
# A workflow run is made up of one or more jobs that can run sequentially or in parallel 
jobs:
 # This workflow contains a single job called "build"
  build:
# The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - id: checkout
        uses: actions/checkout@v3
      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!
       # Runs a multople command scripts using the runners shell
       # TO Run azure commands
      - name: Login with azure actions 
        uses: azure/login@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTAILS }}'

      - name: Run Azure commands
        run:
         az account show
         az group list
      - name: Run a multiple commands script
        if: always() 
        run: |
         echo  added build steps!
         echo  deploy the artifacts
          ls -al
    # Check the version
      - name: java version 
        run: java -version

    # Build maven
      - name: Build with Maven
        run: mvn clean package

    #Docker imaged ceration and push to docker hub 
      - name: Docker Version
        run: |
           docker -v
           docker images -a
      - name: Docker build
        run: |
           docker build -t pradeepcd/springboot-app:1.1 .
           docker images -a
      - name: docker login
        run: docker login -u ${{ secrets.dockerhubusername }} -p ${{ secrets.dockerhubpassword }}
      - name: docker image push
        run: docker push pradeepcd/springboot-app:1.1